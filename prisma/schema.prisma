// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int              @id @default(autoincrement())
  createdAt    DateTime         @default(now())
  //modifiedAt DateTime
  email        String           @unique
  name         String
  surname      String
  address      String
  role         Role             @default(USER)
  cart         ShoppingSession?
  OrderDetails OrderDetails     @relation(fields: [id], references: [user_id])
  UserAddress UserAddress?
  @@map("user")
}

model UserAddress {
  id           Int    @id @default(autoincrement())
  user_id      Int
  address_line String
  city         String
  postal_code  String
  country      String
  phone_number String
  user User @relation(fields: [user_id], references:[id])

  @@map("user_address")
}

model Product {
  id Int @id @default(autoincrement())

  name        String
  description String
  price       Float
  brand       String

  categories ProductCategory[]

  no_in_stock Int
  img         String
  date_added  DateTime @default(now())

  order_item OrderItems? @relation(fields: [id], references: [product_id])
  CartItem   CartItem?

  @@map("product")
}

model ProductCategory {
  id          Int      @id @default(autoincrement())
  category_id Int
  name        String
  desc        String
  created_at  DateTime @default(now())
  Product     Product  @relation(fields: [category_id], references: [id])

  @@map("product_category")
}

model ShoppingSession {
  id         Int        @id @default(autoincrement())
  user_id    Int        @unique
  totalPrice Decimal
  createdAt  DateTime   @default(now())
  modifiedAt DateTime
  user       User       @relation(fields: [user_id], references: [id])
  CartItem   CartItem[]

  @@map("cart")
}

model CartItem {
  id              Int             @id @default(autoincrement())
  session_id      Int             @unique
  product_id      Int             @unique
  quantity        Int
  createdAt       DateTime        @default(now())
  ShoppingSession ShoppingSession @relation(fields: [session_id], references: [id])
  Product         Product         @relation(fields: [product_id], references: [id])

  @@map("cart_item")
}

model OrderDetails {
  id         Int       @id @default(autoincrement())
  user_id    Int       @unique
  total      Decimal
  payment_id Int       @unique
  createdAt  DateTime  @default(now())
  updatedAt  DateTime?

  //Foreign keys and constraints
  OrderItems     OrderItems[]
  PaymentDetails PaymentDetails?
  User           User?
  @@map("order_details")
}

model OrderItems {
  id         Int @id @default(autoincrement())
  order_id   Int
  product_id Int @unique

  quantity  Int
  createdAt DateTime @default(now())

  //Fks and constraints
  product       Product?
  order_details OrderDetails @relation(fields: [order_id], references: [id])

  @@map("order_items")
}

model PaymentDetails {
  id           Int          @id @default(autoincrement())
  amount       Int
  provider     String
  status       String
  createdAt    DateTime     @default(now())
  modifiedAt   DateTime
  OrderDetails OrderDetails @relation(fields: [id], references: [payment_id])
  @@map("payment_details")
}

enum Role {
  USER
  ADMIN
}
