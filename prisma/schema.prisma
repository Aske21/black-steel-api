// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
provider = "prisma-client-js"
}

datasource db {
provider = "postgresql"
url = env("DATABASE_URL")
}

model User {
  @@map("user")
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  //modifiedAt DateTime
  email String @unique
  name String
  surname String
  address String
  role Role @default(USER)
  cart Cart[]
  order Order[]
}

model UserAddress {
  @@map("user_address")
  id Int @id @default(autoincrement())
  user_id Int
  address_line String
  city String 
  postal_code String
  country String
  phone_number String

}

model Product{
  @@map("product")
  id Int @id @default(autoincrement())
  product_id Int @unique
  name String
  price Float
  brand String
  description String
  no_in_stock Int
  img String
  date_added DateTime @default(now())

  order_items order_items @relation(fields:[id],references: [id])

}

model ProductInventory{
  @@map("product_inventory")
  id Int @id @default(autoincrement())
  quantity Int
  created_at DateTime @default(now())
}

model ProductCategory{
  @@map("product_category")
  id Int @id @default(autoincrement())
  name String
  desc String
  created_at DateTime @default(now())
}

model Cart {
  @@map("cart")
  id Int @id @default(autoincrement())
  user_id Int @unique
  product_id Int
  user User @relation(fields: [user_id],references: [id])
  quantity Int
  totalPrice Float

}

model Order{
  @@map("order_details")
  id Int @id @default(autoincrement())
  user_id Int @unique
  total Decimal
  payment_id Int
  createdAt DateTime @default(now())
  updatedAt DateTime?

  //Foreign keys and constraints
  user User @relation(fields: [user_id],references: [id])
  payment payment_details @relation(fields:[payment_id],references: [id])
  order_item order_items[]

}

model order_items {
  id Int @id @default(autoincrement())
  order_id Int
  product_id Product?
  quantity Int
  createdAt DateTime @default(now())

  //Fks and constraints
  order_details Order @relation(fields:[order_id],references: [id])
  

}

model payment_details{
  id Int @id @default(autoincrement())
  order_id Order?
  amount Int
  provider String
  status String
  createdAt DateTime @default(now())
}




enum Role{
USER
ADMIN
}